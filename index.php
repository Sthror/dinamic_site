<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <?php

    /*
Задание 1: разместить строчки кода ниже и вызвать в браузере ваш первый php-скрипт:
echo "Hello world!";
*/

    echo "Hello world!";

    /*
Задание 2: Повторить весь код из роликов раздела "Материалы на обучение"
*/

    //Изучение PHP для начинающих | Урок #3 - Пишем "Hello World!"

    echo "Hello World!<br />"; // вывод текста
    echo "Hello world!"; // вывод текста
    echo "русский текст"; // вывод текста



    //Изучение PHP для начинающих | Урок #4 - Комментарии в PHP

    echo "Hi!"; // Эта строчка выводит Hi!
    /*
        комментарий №1
        комментарий №2
        комментарий №3
    */
    echo "Hi!"; # Эта строчка выводит Hi!


    //Изучение PHP для начинающих | Урок #5 - Переменные и их типы

    $myNumber = 45; // переменная с типом данных "целое число"
    $float = -3.25; // переменная с типом данных "число с плавающей точкой"
    $string = "Hello world!"; // переменная с типом данных "строка"
    $bool = true; // переменная с типом данных "булево значение"

    echo "переменная myNumber - $myNumber"; // вывод переменной
    echo "<br />"; // выводим тег переноса каретки
    echo "переменная float - $float"; // вывод переменной
    echo "<br />"; // выводим тег переноса каретки
    echo "переменная string - $string"; // вывод переменной
    echo "<br />"; // выводим тег переноса каретки
    echo "переменная bool - $bool"; // вывод переменной
    echo "<br />"; // выводим тег переноса каретки
    $myNumber = 12; // меняем значение переменной
    echo "переменная myNumber - $myNumber"; // вывод переменной



    //Изучение PHP для начинающих | Урок #6 - Константы

    echo PHP_VERSION;// выводим константу PHP_VERSION
    define("PI", 3.14); // создаем новую константу PI
    echo "<br />"; // выводим тег переноса каретки
    echo PI; // выводим константу PI
    echo "<br />"; // выводим тег переноса каретки
    echo defined("PI"); // проверяем существование константы
    



    //Изучение PHP для начинающих | Урок #7 - Арифметические операции

    $x = 32; // создаем переменную $x
    $y = 22.13; // создаем переменную $y
    $summ = $x + $y; // операция сложения
    $diff = $x - $y; // операция вычитания
    $mult = $x * $y; // операция умножения
    $dil = $x / $y; // операция деления

    echo "Сумма из $x и $y = $summ<br />"; // выводим результат операции
    echo "Разница из $x и $y = $diff<br />"; // выводим результат операции
    echo "Умножение из $x и $y = $mult<br />"; // выводим результат операции
    echo "Деление из $x и $y = $dil<br />"; // выводим результат операции

    $z = 12; // создаем переменную $z
    $ostatok = $x % $z; // создаем переменную $ostatok? кладем в значение остаток от деления переменных

    echo "Остаток при делении из $x и $z = $ostatok<br />"; // выводим результат операции

    $q = 400; // создаем переменную $q
    $q /= 10; // создаем переменную $q, делим эту же переменную на 10
    echo $q; // выводим значение переменной
    echo "<br />"; // выводим тег переноса каретки
    $q = $q +1;//увеличиваем эту же переменную на 1
    $q += 1;//увеличиваем эту же переменную на 1
    $q++;//увеличиваем эту же переменную на 1
    $q--;//уменьшаем эту же переменную на 1
    echo $q; // выводим значение переменной



    //Изучение PHP для начинающих | Урок #8 - Строковые операции

    $str_1 = "<b>Первая строка</b> <input type=\"text\" />";// объявляем переменную $str_1
    $str_2 = "<i>Вторая строка</i>";// объявляем переменную $str_2

    echo $str_1." ".$str_2." \" \\";// выводим конкатенацию переменных $str_1 и $str_2, разделяем их пробелом, в конце добавляем двойные кавычки и обратный слеш,

    echo ' \' ';// выводим одинарную кавычку



    //Изучение PHP для начинающих | Урок #9 - Логические операции

    $x = 12; // создаем переменную $x
    $y = 34; // создаем переменную $y 
    $z = 4.25; // создаем переменную $z 

    $bool_1 = $x != $z; // переменная с типом данных "булево значение", истина
    $bool_2 = $x <= $y; // переменная с типом данных "булево значение", истина 

    echo $bool_1."<br />".$bool_2."<hr />"; // выводим значений переменных

    $bool_3 = !($x == $y); // переменная с типом данных "булево значение", истина
    $bool_4 = $x == $y || $z < $y; // переменная с типом данных "булево значение", истина
    $bool_5 = $z != $y && $x < $y; // переменная с типом данных "булево значение", истина
    $bool_6 = $z != $x ^ $y < $z; // переменная с типом данных "булево значение", истина

    echo "<br />".$bool_3."<br />".$bool_4."<br />".$bool_5."<br />".$bool_6; // выводим значений переменных    

    $bool = !($x != $y && $z < $x) || $x != $y; // переменная с типом данных "булево значение", истина

    echo "<br/>$bool = !($x != $y && $z < $x) || $x != $y"; // выводим значение переменных



    //Изучение PHP для начинающих | Урок #10 - Оператор эквивалентности

    $string = "Example"; // объявляем переменную
    $num = 0; // объявляем переменную

    $bool_1 = $string == true; // объявляем переменную
    echo "$bool_1 = $string == true;"; // выводим значение переменных

    $bool_2 = $num == ""; // объявляем переменную
    echo "$bool_2 = $num == \"\";<hr/>"; // выводим значение переменных

    $bool_3 = $string === true; // объявляем переменную
    echo "$bool_3 = $string === true;"; // выводим значение переменных

    $bool_4 = $num === ""; // объявляем переменную
    echo "$bool_2 = $num === \"\";"; // выводим значение переменных



    //Изучение PHP для начинающих | Урок #11 - Условные операторы

    $x = 12; // создаем переменную $x
    $y = 34; // создаем переменную $y 

    if($x == $y && $x != 12 && $y == 5 && ($x + 5) == 15) // условие
        echo 'Ура!';// выводим результат
    else if($x == 15 || $y != 7) { // если первое условие ложно
        $num = 5;
        echo  "Число № ".$num;// выводим результат
    }
    else { // если все вышестоящие условия ложны
        echo "<br/>"; // выводим тег переноса каретки
        echo 'Все сработало!';// выводим результат
    }

    if($x == $y && $x != 12 && $y == 5 && ($x + 5) == 15) // условие без вариантов
    echo 'Ура!';// выводим результат

    $x == $y ? $string = "Да" : $string = "Нет"; // краткая запись условия if...else...
    echo "<br/>".$string;// выводим результат



    //Изучение PHP для начинающих | Урок #13 - Циклы For, While и Do While

    for ($i = 100; $i >=80; $i -= 2) { // цикл от 100 до 81, шагом в 2
        if($i % 5 == 0) continue; // если делится на 5 без остатка продолжить цикл не выполняя текущую итерацию
        if($i <= 87) break; // если меньше или равно 87 полностью остановить цикл, текущая итерация не выполнится
        echo "Цикл под номером № $i<br/>";// выводим результат 
    }

    echo "<br/>"; // выводим тег переноса каретки
    $x = 1; // создаем переменную $x

    while ($x <= 10){ // цикл, пока $x меньше или равен 10
        echo "Итерация под номером № $x<br/>"; // выводим результат 
        if($x == 7) // условие $x равен 7 ?
            for($y = 0; $y < 5; $y += 3) // цикл от 0 до 4 шагом 3
                echo "Еще одна итерация - $y<br/>";  // выводим результат           
        $x++; // прибавляем на 1
    }

    $z = 10; // создаем переменную $z
    echo "<br/>"; // выводим тег переноса каретки

    do{ // сделать до тех пор пока условие ниже не будет ложно
        echo "Операция выполнилась только один раз"; // выводим результат 
        $z++; // прибавляем на 1
    } while ($z < 5); // условие для скрипта выше, если ложно скрипт выполнится только один раз



    /*
Задание 3: Задачи на написания линейных алгоритмов. Необходимо сделать/нарисовать сначала блок-схему, затем воспроизвести блок-схему в коде на php.
3a. Посчитать и вывести на экран чему равен периметр четырехугольника. Дано сторона a=5, сторона b=3, сторона c=5, сторона d=11.
*/



    /*
3b. посчитать и вывести на экран значение S. Дано S = (a + b)^2, a = 7x, b=21x, x = ½
*/



    /*
Задание 4: Задачи на написание вариативных алгоритмов (if...else)
4a. Посчитать площадь трапеции если переменная $Why заданная пользователем в начале сценария истина и периметр трапеции если эта переменная ложь. Значения необходимые для расчета площади и периметра задайте самостоятельно.
*/



    /*
4b. Доработать предыдущую задачу добавив проверку корректности вводимых данных пользователем. Если данные введены некорректно, то сообщить об этом и не производить расчеты.
Подсказка: для проверки корректности вводимых данных, рекомендуется сравнить введенное значение и вычисленное значение высоты.
*/



    /*
Задание 5: Задачи на написание алгоритмов с циклами (for, while)
5a. В задаче будем использовать функцию rand() она из заданного диапазона значений выбирает одно случайное.
Необходимо определить пессимист компьютер или оптимист.
Пусть $computer = rand(0,1). Если $computer выбирает 0, то он пессимист, если выбирает 1, то он оптимист.
Выполнить опрос компьютера 100 раз и вывести на экран по итогу всех этих итераций вывод - пессимист этот компьютер сегодня/сейчас или оптимист.
Подсказка: не нужно выводить 100 раз пессимист/оптимист, а нужен итог с цифрами, типа на 55% оптимист.
*/



    /*
5b. В переменной $password хранится шестизначный пароль, состоящий только из цифр, например 302390.
Необходимо написать программу которая методом перебора найдет пароль.
Подсказка: 012345 - тоже вариант пароля.
*/



    /*
5c. В переменных $pass1 и $pass2 хранятся трехзначные пароли.
Мы уже подобрали пароль $pass1, например он равен 436.
Пароль $pass2 удалось получить только в зашифрованном виде $pass2Se.
Мы узнали что шифр был сделан по следующему правилу - если "вторая цифра из $pass1" больше 5, то $pass2 = "цифра первого разряда из $pass2Se" . "число второго разряда из $pass2Se" . "число третьего разряда из $pass2Se", а если "второе число из $pass1" меньше либо равно 5, то $pass2 = "цифра второго разряда из $pass2Se" . "цифра третьего разряда из $pass2Se" . "цифра первого разряда из $pass2Se".
Вывести на экран $pass2 и описание правила по которому этот пароль был расшифрован из $pass2Se.
Значение для переменной $pass2Se задайте на своё усмотрение.
*/



    /*
5d. Для предыдущей задачи написать алгоритм шифрования пароля $pass2
*/



    /*
Задание 6: Задачи на выбор типов данных
6a. Даны два одноразрядных числа заданных с помощью слов (например $a='семь' и b='четыре').
Вывести на экран, в виде числа, результат сложения этих цифр.
Проверить результат сложения на разрядность, если разрядность больше 1, то вывести сообщение "большое число", иначе вывести сообщение "маленькое число".
*/



    /*
6b. Предположим у нас в программе цены хранятся в виде целых чисел, но фактически - два последних разряда числа обозначают копейки.
Например, цена товара хранится в виде 10050, это значит что товар стоит 100 рублей 50 копеек.
Написать программу которая выведет на экран цену в двух форматах "N рубл[ей/я] M копе[ек/ки]." и "N.M руб." увеличив при этом цену товара на 13 процентов.
В программе использовать оператор % ($a % $b - целочисленный остаток от деления $a на $b).
*/



    /*
6c. Как известно, при переводе IP-адреса компьютера в число, мы экономим ресурсы памяти, так как IP-адрес в четвертой версии — это 32-х битовое число и запись в строчном виде 192.168.1.1 будет занимать 15 байт, а в числовом виде всего 4 байта.
При этом удобной формой записи является запись в виде четырёх десятичных чисел значением от 0 до 255, разделённых точками, например, 192.0.2.60. но для хранения его в базе данных лучше перевести его в десятичное целое число.
Например 192.168.1.1 — это одно и то же, что 3232235777.
Алгоритм перевода строковой записи IP4 в числовую такой X = Y1 * 256 ^ 0 + Y2 * 256 ^ 1 + Y3 * 256 ^ 2 + Y4 * 256 ^3 (где ip адрес имеет формат Y4.Y3.Y2.Y1) Написать перевести алгоритм в php-код.
Пользователь программы вводит на входе $IP = '123.123.123.123' или $IP = 3232235777, программа должна определить какого вида IP ввел пользователь и показать альтернативную запись.
Для обработки адреса с "точкой" использовать функцию substr() - возвращает подстроку строки string длиной length, начинающегося с start символа по счету)
*/
    ?>

</body>

</html>